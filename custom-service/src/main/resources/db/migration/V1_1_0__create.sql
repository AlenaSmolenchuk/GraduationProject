CREATE SCHEMA IF NOT EXISTS bank;

-- сущность Банковские счета
CREATE TABLE IF NOT EXISTS bank.bank_accounts
(
    id_bank_account  INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    num_bank_account NUMERIC(20, 0) NOT NULL UNIQUE,
    amount           NUMERIC(20,0)  NOT NULL
    );

CREATE TABLE IF NOT EXISTS bank.customers
(
    id_customer     INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    bank_account_id INTEGER     NOT NULL REFERENCES bank.bank_accounts (id_bank_account)
    ON DELETE CASCADE,
    phone_number    VARCHAR(11) NOT NULL UNIQUE,
    password        VARCHAR(100) NOT NULL UNIQUE
    );

-- сущность Виды вкладов
CREATE TABLE IF NOT EXISTS bank.deposits_types
(
    id_deposit_type   INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    deposit_type_name VARCHAR(28) NOT NULL
    );

-- сущность Виды выплаты процентов
CREATE TABLE IF NOT EXISTS bank.types_percent_payment
(
    id_type_percent_payment     INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    type_percent_payment_period VARCHAR(17) NOT NULL
    );

-- сущность Статусы заявок
CREATE TABLE IF NOT EXISTS bank.request_statuses
(
    id_request_status   INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    request_status_name VARCHAR(21) NOT NULL
    );

-- сущность Вклады
CREATE TABLE IF NOT EXISTS bank.deposits
(
    id_deposit                 INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    deposit_account_id         INTEGER       NOT NULL REFERENCES bank.bank_accounts (id_bank_account)
    ON DELETE CASCADE,
    deposit_type_id            INTEGER       NOT NULL REFERENCES bank.deposits_types (id_deposit_type)
    ON DELETE CASCADE,
    deposit_refill             BOOLEAN       NOT NULL,
    deposit_amount             NUMERIC(20,0),
    start_date                 DATE          NOT NULL,
    end_date                   DATE          NOT NULL,
    deposit_rate               DECIMAL(4, 2) NOT NULL,
    type_percent_payment_id    INTEGER       NOT NULL REFERENCES bank.types_percent_payment (id_type_percent_payment)
    ON DELETE CASCADE,
    percent_payment_date       DATE          NOT NULL,
    capitalization             BOOLEAN       NOT NULL
    );

-- сущность Вклады клиентов
CREATE TABLE IF NOT EXISTS bank.customer_deposits
(
    customer_id INTEGER NOT NULL REFERENCES bank.customers (id_customer)
    ON DELETE CASCADE,
    deposit_id  INTEGER NOT NULL REFERENCES bank.deposits (id_deposit)
    ON DELETE CASCADE
    );

-- сущность Заявки
CREATE TABLE IF NOT EXISTS bank.requests
(
    id_request   INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    customer_id  INTEGER NOT NULL REFERENCES bank.customers (id_customer)
    ON DELETE CASCADE,
    request_date DATE    NOT NULL,
    deposit_id   INTEGER NOT NULL REFERENCES bank.deposits (id_deposit)
    ON DELETE CASCADE
    );

-- сущность Текущий статус заявок
CREATE TABLE IF NOT EXISTS bank.current_request_status
(
    request_id        INTEGER             NOT NULL REFERENCES bank.requests (id_request)
    ON DELETE CASCADE,
    request_status_id INTEGER             NOT NULL REFERENCES bank.request_statuses (id_request_status)
    ON DELETE CASCADE,
    change_datetime   TIME WITH TIME ZONE NOT NULL
        );